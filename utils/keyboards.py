from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton

def get_main_keyboard():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞"""
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(
        KeyboardButton("üîç –ü–æ–∏—Å–∫ –º—É–∑—ã–∫–∏"),
        KeyboardButton("üìÅ –ú–æ–∏ –∞–ª—å–±–æ–º—ã")
    )
    keyboard.add(
        KeyboardButton("‚ùì –ü–æ–º–æ—â—å"),
        KeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    )
    return keyboard

def get_search_results_keyboard(results, query, page):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–µ–∫–∏
    for track in results:
        track_text = f"üéµ {track['artist']} - {track['title']}"
        if len(track_text) > 60:
            track_text = track_text[:57] + "..."
        
        keyboard.add(
            InlineKeyboardButton(
                track_text,
                callback_data=f"download:{track['id']}"
            )
        )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    pagination_buttons = []
    if page > 0:
        pagination_buttons.append(
            InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data=f"search_page:{query}:{page-1}")
        )
    
    pagination_buttons.append(
        InlineKeyboardButton("‚û°Ô∏è –î–∞–ª–µ–µ", callback_data=f"search_page:{query}:{page+1}")
    )
    
    if pagination_buttons:
        keyboard.row(*pagination_buttons)
    
    return keyboard

def get_track_actions_keyboard(track_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏ –¥–ª—è —Ç—Ä–µ–∫–∞"""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("üìÅ –î–æ–±–∞–≤–∏—Ç—å –≤ –∞–ª—å–±–æ–º", callback_data=f"add_album:{track_id}")
    )
    return keyboard

def get_albums_keyboard(albums, can_create=True):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –∞–ª—å–±–æ–º–æ–≤"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for album in albums:
        keyboard.add(
            InlineKeyboardButton(
                f"üìÅ {album['name']}",
                callback_data=f"album:{album['id']}"
            )
        )
    
    if can_create:
        keyboard.add(
            InlineKeyboardButton("‚ûï –°–æ–∑–¥–∞—Ç—å –∞–ª—å–±–æ–º", callback_data="create_album")
        )
    
    return keyboard

def get_albums_selection_keyboard(albums, track_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–ª—å–±–æ–º–∞"""
    keyboard = InlineKeyboardMarkup(row_width=1)
    
    for album in albums:
        keyboard.add(
            InlineKeyboardButton(
                f"üìÅ {album['name']}",
                callback_data=f"album_add:{album['id']}:{track_id}"
            )
        )
    
    return keyboard

def get_album_keyboard(album_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–ª—å–±–æ–º–æ–º"""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("‚ñ∂Ô∏è –í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏", callback_data=f"play_album:{album_id}"),
        InlineKeyboardButton("üìù –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å", callback_data=f"rename_album:{album_id}")
    )
    keyboard.add(
        InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_album:{album_id}")
    )
    return keyboard
